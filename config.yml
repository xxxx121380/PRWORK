
#使用 "%papi_c:例子.例子1%" = 50 
例子:
  例子1: "%papi_c:例子.例子2%"
  例子2: "50"
  
# 以下是PxRpg一套的默认数据公式
prefix: '&7[&bPapi&7] &f'
loot-level-range: '20'
系统经验: "1"
系统金币: "1"
属性:
  攻击方:
    准确率: "(({a.敏捷.v}*5+{a.准确率})*(1-{v.减目标准确.s}))"
#    防御值: "({a.敏捷.v}/4+{a.防御值.v})"
#    格挡率: "Math.min({a.格挡率.s}*({a.敏捷.v}-15)/Math.max({a_d.level},1)/2.0,0.75)"
    基础伤害: "((1+{a.增强伤害.s})*({a.基础伤害.v}+({a.力量.v}+{a.敏捷.v})/20.0+({a.最小伤害.v}+{a.最大伤害.v})/2))"
  被攻击方:
#    准确率: "{v.敏捷.v}*5+{v.准确率.v}"
    防御值: "(({v.敏捷.v}/4+{v.防御值})*(1-{a.无视目标防御.s}))"
    格挡率: "(Math.min({v.格挡率.s}*({v.敏捷.v}-15)/({v_d.level}*2),0.75))"
  通用:
    法术伤害加成: "(1+{a.法术技能伤害加成.s}-{v.减目标伤害.s}-{a.削弱伤害.s})"
    攻击伤害加成: "(1+{a.攻击技能伤害加成.s}-{v.减目标伤害.s}-{a.削弱伤害.s})"
    物理倍率: "((1+{a.减目标物抗.s}-{v.抗物理.s})*(1+{a.物理增伤.s})-{v.物理减伤.v})"
    魔法倍率: "((1+{a.减目标魔抗.s}-{v.抗魔法.s})*(1+{a.魔法增伤.s})-{v.魔法减伤.v})"
    火焰倍率: "(1+{a.减目标火抗.s}-Math.min(({v.抗火.s}+{v.元素抗性.s}),(0.85+{v.最大火焰抗性.s}))+{a.减元素抗性.s})*(1+{a.火焰增伤.s})"
    冰冻倍率: "(1+{a.减目标冰抗.s}-Math.min(({v.抗冰.s}+{v.元素抗性.s}),(0.85+{v.最大冰冻抗性.s}))+{a.减元素抗性.s})*(1+{a.冰冻增伤.s})"
    闪电倍率: "(1+{a.减目标电抗.s}-Math.min(({v.抗电.s}+{v.元素抗性.s}),(0.85+{v.最大闪电抗性.s}))+{a.减元素抗性.s})*(1+{a.闪电增伤.s})"
    毒素倍率: "(1+{a.减目标毒抗.s}-Math.min(({v.抗毒.s}+{v.元素抗性.s}),(0.85+{v.最大毒素抗性.s}))+{a.减元素抗性.s})*(1+{a.毒素增伤.s})"
    PVE命中率: "(Math.min(2*({a_d.level}/({a_d.level}+{v.怪物等级.v}))*%papi_c:属性.攻击方.准确率%/(%papi_c:属性.攻击方.准确率%+%papi_c:属性.被攻击方.防御值%),0.95)-{v.格挡率.s})"
    EVP命中率: "(Math.min(2*({a.怪物等级.v}/({a.怪物等级.v}+{v_d.level}))*%papi_c:属性.攻击方.准确率%/(%papi_c:属性.攻击方.准确率%+%papi_c:属性.被攻击方.防御值%),0.95)-%papi_c:属性.被攻击方.格挡率%)"
    PVP命中率: "(Math.min(2*({a_d.level}/({a_d.level}+{v_d.level}))*%papi_c:属性.攻击方.准确率%/(%papi_c:属性.攻击方.准确率%+%papi_c:属性.被攻击方.防御值%),0.95)-%papi_c:属性.被攻击方.格挡率%)"
伤害:
  判定:
    魔法伤害: "if({a.魔法伤害},>,0{true,false})"
    火焰伤害: "if({a.火焰伤害},>,0{true,false})"
    闪电伤害: "if({a.闪电伤害},>,0{true,false})"
    冰冻伤害: "if({a.冰冻伤害},>,0{true,false})"
    毒素伤害: "if({a.毒素伤害},>,0{true,false})"
  计算:
    人打怪:
      命中: "if(random(0,1),<=, %papi_c:属性.通用.PVE命中率% {true,false})"
      暴击: "if(random(0,1),<=, {a.暴击率.s}{true,false})"
      吸血: "format({this.total.damage}*{a.吸取生命.s}+{a.吸取生命.v},#.0)"
      吸蓝: "format({this.total.damage}*{a.吸取法力.s}+{a.吸取法力.v},#.0)"
      暴击伤害: "format({this.damage.value}*2+{v_d.health}*0.05,#.0)"
      物理伤害: "Math.max(0,%papi_c.属性.通用.攻击伤害加成%*%papi_c:属性.攻击方.基础伤害%)"
      魔法伤害: "Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.魔法伤害.v}*(1+{a.魔法增伤.s})*(1+{a.减目标魔抗.s}-{v.抗魔法.s}))"
      火焰伤害: "(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.火焰伤害.v}*%papi.属性.通用.火焰倍率%))"
      闪电伤害: "(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.闪电伤害.v}*%papi.属性.通用.闪电倍率%))"
      冰冻伤害: "(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.冰冻伤害.v}*%papi.属性.通用.冰冻倍率%))"
      毒素伤害: "(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.毒素伤害.v}*%papi.属性.通用.毒素倍率%))"
      雪球伤害: "(Math.max(0,((1+{a.攻击技能伤害加成.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.增强伤害.s})*%papi.属性.通用.冰冻倍率%)))"
      火焰弹伤害: "(Math.max(0,((1+{a.攻击技能伤害加成.s})*(%papi_c:属性.攻击方.基础伤害%)*{a.增强伤害.v}*%papi.属性.通用.火焰倍率%)))"
      物理伤害二: "format(Math.max(0,(%papi_c:属性.通用.法术技能伤害加成%)*(1+{a.增强伤害.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.物理增伤.s})*(1+{a.减目标物抗.s}-{v.抗物理.s})),#.0)"
      魔法伤害二: "format(Math.max(0,(%papi_c:属性.通用.法术技能伤害加成%)*{a.魔法伤害.v}*(1+{a.魔法增伤.s})*(1+{a.减目标魔抗.s}-{v.抗魔法.s})),#.0)"
      火焰伤害二: "format(Math.max(0,(%papi_c:属性.通用.法术技能伤害加成%)*{a.火焰伤害.v}*(1+{a.火焰增伤.s})*(1+{a.减目标火抗.s}-{v.抗火.s}-{v.元素抗性.s}+{a.减元素抗性.s})),#.0)"
      闪电伤害二: "format(Math.max(0,(%papi_c:属性.通用.法术技能伤害加成%)*{a.闪电伤害.v}*(1+{a.闪电增伤.s})*(1+{a.减目标电抗.s}-{v.抗电.s}-{v.元素抗性.s}+{a.减元素抗性.s})),#.0)"
      冰冻伤害二: "format(Math.max(0,(%papi_c:属性.通用.法术技能伤害加成%)*{a.冰冻伤害.v}*(1+{a.冰冻增伤.s})*(1+{a.减目标冰抗.s}-{v.抗冰.s}-{v.元素抗性.s}+{a.减元素抗性.s})),#.0)"
      毒素伤害二: "format(Math.max(0,(%papi_c:属性.通用.法术技能伤害加成%)*{a.毒素伤害.v}*(1+{a.毒素增伤.s})*(1+{a.减目标毒抗.s}-{v.抗毒.s}-{v.元素抗性.s}+{a.减元素抗性.s})),#.0)"
      雪球伤害二: "format(Math.max(0,((%papi_c:属性.通用.法术技能伤害加成%)*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.增强伤害.s})*(1+{a.冰冻增伤.s})*(1+{a.减目标冰抗.s}-{v.抗冰.s}-{v.元素抗性.s}+{a.减元素抗性.s}))),#.0)"
      火焰弹伤害二: "format(Math.max(0,((%papi_c:属性.通用.法术技能伤害加成%)*(%papi_c:属性.攻击方.基础伤害%)*{a.增强伤害.v}*(1+{a.火焰增伤.s})*(%papi_c:属性.通用.PVE火抗%))),#.0)"
    怪打人:
      命中: "if(random(0,1),<=,%papi_c:属性.通用.EVP命中率%{true,false})"
      暴击: "%papi_c:伤害.计算.人打怪.暴击%"
      吸血: "%papi_c:伤害.计算.人打怪.吸血%"
      暴击伤害: "format({damage}*2,#.0)"
      物理伤害: "(1+{a.攻击技能伤害加成.s})*format(Math.max(0,{a.基础伤害.v}*(1+{a.怪物增强伤害.s})*(1-{v.抗物理.s})-{v.物理减伤.v}),#.0)"
      魔法伤害: "%papi_c:伤害.计算.人打怪.魔法伤害%"
      火焰伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.火焰伤害.v}*(1+{a.火焰增伤.s})*(1+{a.减目标火抗.s}-Math.min(0.85,{v.抗火.s}))),#.0)"
      闪电伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.闪电伤害.v}*(1+{a.闪电增伤.s})*(1+{a.减目标电抗.s}-Math.min(0.85,{v.抗电.s}))),#.0)"
      冰冻伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.冰冻伤害.v}*(1+{a.冰冻增伤.s})*(1+{a.减目标冰抗.s}-Math.min(0.85,{v.抗冰.s}))),#.0)"
      毒素伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.毒素伤害.v}*(1+{a.毒素增伤.s})*(1+{a.减目标毒抗.s}-Math.min(0.85,{v.抗毒.s}))),#.0)"
      雪球伤害: "format(Math.max(0,((1+{a.怪物增强伤害.s})*{a.基础伤害.v}*(1+{a.冰冻增伤.s})*(1+{a.减目标冰抗.s}-Math.min(0.85,{v.抗冰.s}))),#.0)"
      火焰弹伤害: "format(Math.max(0,((1+{a.怪物增强伤害.s})*{a.基础伤害.v}*(1+{a.火焰增伤.s})*(1+{a.减目标火抗.s}-Math.min(0.85,{v.抗火.s}))),#.0)"
    人打人:
      命中: "if(random(0,1),<=, %papi_c:属性.通用.PVP命中率% {true,false})"
      暴击: "%papi_c:伤害.计算.人打怪.暴击%"
      吸血: "%papi_c:伤害.计算.人打怪.吸血%"
      暴击伤害: "%papi_c:伤害.计算.人打怪.暴击伤害%"
      物理伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*(1+{a.增强伤害.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.物理增伤.s})*(1+{a.减目标物抗.s}-{v.抗物理.s})-{v.物理减伤.v}),#.0)"
      魔法伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.魔法伤害.v}*(1+{a.魔法增伤.s})*(1+{a.减目标魔抗.s}-{v.抗魔法.s})-{v.魔法减伤.v}),#.0)"
      火焰伤害: "%papi_c:伤害.计算.怪打人.火焰伤害%"
      闪电伤害: "%papi_c:伤害.计算.怪打人.闪电伤害%"
      冰冻伤害: "%papi_c:伤害.计算.怪打人.冰冻伤害%"
      毒素伤害: "%papi_c:伤害.计算.怪打人.毒素伤害%"
      雪球伤害: "%papi_c:伤害.计算.怪打人.雪球伤害%"
      火焰弹伤害: "%papi_c:伤害.计算.怪打人.火焰弹伤害%"
职业属性:
  法师:
    元素: "{a.法师元素技能加成.v}+{a.全技能加成.v}+{a.法师技能加成.v}"
    冥想: "{a.法师冥想技能加成.v}+{a.全技能加成.v}+{a.法师技能加成.v}"
    烈焰飞弹: "{a_sk.烈焰飞弹.lv}+ %papi_c:职业属性.法师.元素%+{a.烈焰飞弹.v}"
    烈焰风暴: "{a_sk.烈焰风暴.lv}+ %papi_c:职业属性.法师.元素%+{a.烈焰风暴.v}"
    流星雨: "{a_sk.流星雨.lv}+ %papi_c:职业属性.法师.元素%+{a.流星雨.v}"
    静态力场: "{a_sk.静态力场.lv}+ %papi_c:职业属性.法师.元素%+{a.静态力场.v}"
    连锁闪电: "{a_sk.连锁闪电.lv}+ %papi_c:职业属性.法师.元素%+{a.连锁闪电.v}"
    雷云风暴: "{a_sk.雷云风暴.lv}+ %papi_c:职业属性.法师.元素%+{a.雷云风暴.v}"
    冰霜射线: "{a_sk.冰霜射线.lv}+ %papi_c:职业属性.法师.元素%+{a.冰霜射线.v}"
    霜之新星: "{a_sk.霜之新星.lv}+ %papi_c:职业属性.法师.元素%+{a.霜之新星.v}"
    冰封球: "{a_sk.冰封球.lv}+ %papi_c:职业属性.法师.元素%+{a.冰封球.v}"
    强化: "{a_sk.强化.lv}+ %papi_c:职业属性.法师.冥想%+{a.强化.v}"
    冰封装甲: "{a_sk.冰封装甲.lv}+ %papi_c:职业属性.法师.冥想%+{a.冰封装甲.v}"
  骑士:
    战斗: "{a.骑士战斗技能加成.v}+{a.全技能加成.v}+{a.骑士技能加成.v}"
    光环: "{a.骑士光环技能加成.v}+{a.全技能加成.v}+{a.骑士技能加成.v}"
    牺牲: "{a_sk.牺牲.lv}+%papi_c:职业属性.骑士.战斗%"
    白热: "{a_sk.白热.lv}+%papi_c:职业属性.骑士.战斗%"
    复仇: "{a_sk.复仇.lv}+%papi_c:职业属性.骑士.战斗%"
    天罚: "{a_sk.天罚.lv}+%papi_c:职业属性.骑士.战斗%"
  萨满:
    增强: "{a.萨满增强技能加成.v}+{a.全技能加成.v}+{a.萨满技能加成.v}"
    自然: "{a.萨满自然技能加成.v}+{a.全技能加成.v}+{a.萨满技能加成.v}"
    先祖之力: "if(0,!=,{skillapi.a.slv.先祖之力} {9+{skillapi.a.slv.先祖之力}+%papi_c:职业属性.萨满.增强%,0})"
    PVE命中率: "(Math.min((2*{a_d.level}/({a_d.level}+{v.怪物等级.v}))*(%papi_c:属性.攻击方.准确率%)/(%papi_c:属性.攻击方.准确率%+Math.max(0,(1-{a.无视目标防御.s}-(%papi_c:职业属性.萨满.先祖之力%))*{v.防御值.v})),0.95)-{v.格挡率.s})"
    PVP命中率: "(Math.min((2*{a_d.level}/({a_d.level}+{v_d.level}))*(1-{v.减目标准确.s})*(%papi_c:属性.攻击方.准确率%)/((1-{v.减目标准确.s})*(%papi_c:属性.攻击方.准确率%)+Math.max(0,(1-{a.无视目标防御.s}-(%papi_c:职业属性.萨满.先祖之力%))*{v.防御值.v})),0.95)-(%papi_c:属性.被攻击方.格挡率%))"
  刺客:
    格斗: "{a.刺客格斗技能加成.v}+{a.全技能加成.v}+{a.刺客技能加成.v}"
    毒素: "{a.刺客毒素技能加成.v}+{a.全技能加成.v}+{a.刺客技能加成.v}"
    伺机待发: "if(0,!=,{skillapi.a.slv.伺机待发} {9+{skillapi.a.slv.伺机待发}+%papi_c:职业属性.刺客.格斗%,0})"
    毒素蒸馏: "if(0,!=,{skillapi.a.slv.毒素蒸馏} {9+{skillapi.a.slv.毒素蒸馏}+%papi_c:职业属性.刺客.毒素%,0})"
    武学艺术: "if(0,!=,{skillapi.a.slv.武学艺术} {9+{skillapi.a.slv.武学艺术}+%papi_c:职业属性.刺客.格斗%,0})"
职业伤害:
  人打怪:
    法师:
      火焰伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.火焰伤害.v}*(1+{a.火焰增伤.s}+(%papi_c:职业属性.法师.支配火焰%))*(1+(%papi_c:职业属性.法师.支配火焰%)+{a.减目标火抗.s}-{v.抗火.s})),#.0)"
      闪电伤害: "format({a.闪电伤害.v}*(1+({a.闪电增伤.v}+%papi_c:职业属性.法师.支配闪电%)/100.0)*(1+({a.减目标电抗.v}-{v.抗电.v}+%papi_c:职业属性.法师.支配闪电%)/100.0),#.0)"
      冰冻伤害: "format({a.冰冻伤害.v}*(1+({a.冰冻增伤.v}+%papi_c:职业属性.法师.支配冰冻%)/100.0)*(1+({a.减目标冰抗.v}-{v.抗冰.v}+%papi_c:职业属性.法师.支配冰冻%)/100.0),#.0)"
      雪球伤害: "format(Math.max(0,((1+{a.攻击技能伤害加成.s})*(%papi_c:属性.攻击方.基础伤害%)*{a.增强伤害.v}*(1+{a.冰冻增伤.s}+(%papi_c:职业属性.法师.支配冰冻%))*(1+(%papi_c:职业属性.法师.支配冰冻%)+{a.减目标冰抗.s}-{v.抗冰.s}))),#.0)"
      火焰弹伤害: "format(Math.max(0,((1+{a.攻击技能伤害加成.s})*(%papi_c:属性.攻击方.基础伤害%)*{a.增强伤害.v}*(1+{a.火焰增伤.s}+(%papi_c:职业属性.法师.支配火焰%))*(1+(%papi_c:职业属性.法师.支配火焰%)+{a.减目标火抗.s}-{v.抗火.s}))),#.0)"
    萨满:
      命中: "if(random(0,1),<=, %papi_c:职业属性.萨满.PVE命中率% {true,false})"
      物理伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*(1+{a.增强伤害.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.物理增伤.s}+(%papi_c:职业属性.萨满.先祖之力%))*(1+{a.减目标物抗.s}-{v.抗物理.s})),#.0)"
    刺客:
      物理伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*(1+{a.增强伤害.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.物理增伤.s}+(%papi_c:职业属性.刺客.武学艺术%))*(1+{a.减目标物抗.s}+(%papi_c:职业属性.刺客.武学艺术%)/2-{v.抗物理.s})),#.0)"
      毒素伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.毒素伤害.v}*(1+{a.毒素增伤.s}+(%papi_c:职业属性.刺客.毒素蒸馏%))*(1+{a.减目标毒抗.s}-{v.抗毒.s})),#.0)"
      伺机物理: "if(random(0,1),<,(%papi_c:职业属性.刺客.伺机待发%)/100.0 {2*(papi_c:职业伤害.人打怪.刺客.物理伤害),(papi_c:职业伤害.人打怪.刺客.物理伤害)})"
  人打人:
    法师:
      火焰伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.火焰伤害.v}*(1+{a.火焰增伤.s}+(%papi_c:职业属性.法师.支配火焰%))*(1+(%papi_c:职业属性.法师.支配火焰%)+{a.减目标火抗.s}-Math.min(0.85,{v.抗火.s}))),#.0)"
      闪电伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.闪电伤害.v}*(1+{a.闪电增伤.s}+(%papi_c:职业属性.法师.支配闪电%))*(1+(%papi_c:职业属性.法师.支配闪电%)+{a.减目标电抗.s}-Math.min(0.85,{v.抗电.s}))),#.0)"
      冰冻伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.冰冻伤害.v}*(1+{a.冰冻增伤.s}+(%papi_c:职业属性.法师.支配冰冻%))*(1+(%papi_c:职业属性.法师.支配冰冻%)+{a.减目标冰抗.s}-Math.min(0.85,{v.抗冰.s}))),#.0)"
      雪球伤害: "format(Math.max(0,((1+{a.怪物增强伤害.s})*{a.基础伤害.v}*(1+{a.冰冻增伤.s}+(%papi_c:职业属性.法师.支配冰冻%))*(1+(%papi_c:职业属性.法师.支配冰冻%)+{a.减目标冰抗.s}-Math.min(0.85,{v.抗冰.s}))),#.0)"
      火焰弹伤害: "format(Math.max(0,((1+{a.怪物增强伤害.s})*{a.基础伤害.v}*(1+{a.火焰增伤.s}+(%papi_c:职业属性.法师.支配火焰%))*(1+(%papi_c:职业属性.法师.支配火焰%)+{a.减目标火抗.s}-Math.min(0.85,{v.抗火.s}))),#.0)"
    萨满:
      命中: "if(random(0,1),<=, %papi_c:职业属性.萨满.PVP命中率% {true,false})"
      物理伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*(1+{a.增强伤害.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.物理增伤.s}+(%papi_c:职业属性.萨满.先祖之力%))*(1+{a.减目标物抗.s}-{v.抗物理.s})-{v.物理减伤.v}),#.0)"
    刺客:
      物理伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*(1+{a.增强伤害.s})*(%papi_c:属性.攻击方.基础伤害%)*(1+{a.物理增伤.s}+(%papi_c:职业属性.刺客.武学艺术%))*(1+{a.减目标物抗.s}+(%papi_c:职业属性.刺客.武学艺术%)/2-{v.抗物理.s})-{v.物理减伤.v}),#.0)"
      毒素伤害: "format(Math.max(0,(1+{a.攻击技能伤害加成.s})*{a.毒素伤害.v}*(1+{a.毒素增伤.s}+(%papi_c:职业属性.刺客.毒素蒸馏%))*(1+{a.减目标毒抗.s}-Math.min(0.85,{v.抗毒.s}))),#.0)"
      伺机物理: "if(random(0,1),<,(%papi_c:职业属性.刺客.伺机待发%)/100.0 {2*(papi_c:职业伤害.人打人.刺客.物理伤害),(papi_c:职业伤害.人打人.刺客.物理伤害)})"
职业技能:
  法师:
    烈焰飞弹:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(5,9)+ (%papi_c:职业属性.法师.烈焰飞弹%)+{a.火焰伤害.v})*(1+0.09*(%papi_c:职业属性.法师.烈焰风暴%)) * (1+0.09*(%papi_c:职业属性.法师.流星雨%)) *%papi_c:属性.通用.火焰倍率%"
      点燃: "(%papi_c:职业技能.法师.烈焰飞弹.主体%) * (9.5+0.5*(%papi_c:职业属性.法师.烈焰飞弹%))/100.0"
    烈焰风暴:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(11,21)+ randomint(3,5)*(%papi_c:职业属性.法师.烈焰风暴%) +{a.火焰伤害.v})* (1+0.09*(%papi_c:职业属性.法师.烈焰飞弹%)) * (1+0.09*(%papi_c:职业属性.法师.流星雨%)) *%papi_c:属性.通用.火焰倍率%/5"
      点燃: "5*(%papi_c:职业技能.法师.烈焰风暴.主体%) * (9.5+0.5*(%papi_c:职业属性.法师.烈焰风暴%))/100.0"
    流星雨:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(37,103)+ randomint(6,13)*(%papi_c:职业属性.法师.流星雨%)+{a.火焰伤害.v})*(1+0.09*(%papi_c:职业属性.法师.烈焰飞弹%)) * (1+0.09*(%papi_c:职业属性.法师.烈焰风暴%)) *%papi_c:属性.通用.火焰倍率%/8"
      点燃: "8*(%papi_c:职业技能.法师.流星雨.主体%) * (9.5+0.5*(%papi_c:职业属性.法师.流星雨%))/100.0"
    静态力场:
      主体: "(%papi_c:属性.通用.法术伤害加成%)*(1+{a.法师伤害加成.s})*((5+0.25*(%papi_c:职业属性.法师.静态力场%))/100.0*{v_d.health}+{a.闪电伤害.v})*%papi_c:属性.通用.闪电倍率%/3"
    连锁闪电:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(1,124)+ randomint(1,16)*(%papi_c:职业属性.法师.连锁闪电%) +{a.闪电伤害.v})*(1+0.09*(%papi_c:职业属性.法师.静态力场%)) * (1+0.09*(%papi_c:职业属性.法师.雷云风暴%)) * *%papi_c:属性.通用.闪电倍率%/2"
      电击:  "2*(%papi_c:职业技能.法师.连锁闪电.主体%) * (9.5+0.5*(%papi_c:职业属性.法师.连锁闪电%))/100"
    雷云风暴:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(1,199)+ randomint(1,24)*(%papi_c:职业属性.法师.雷云风暴%) +{a.闪电伤害.v})* (1+0.09*(%papi_c:职业属性.法师.静态力场%)) * (1+0.09*(%papi_c:职业属性.法师.连锁闪电%)) *%papi_c:属性.通用.闪电倍率%"
    冰霜射线:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(6,8)+ (%papi_c:职业属性.法师.冰霜射线%) +{a.冰冻伤害.v})* (1+0.09*(%papi_c:职业属性.法师.霜之新星%)) * (1+0.09*(%papi_c:职业属性.法师.冰封球%)) *%papi_c:属性.通用.冰冻倍率%"
    霜之新星:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(10,13)+ randomint(2,4)*(%papi_c:职业属性.法师.霜之新星%) +{a.冰冻伤害.v})* (1+0.09*(%papi_c:职业属性.法师.冰霜射线%)) * (1+0.09*(%papi_c:职业属性.法师.冰封球%)) *%papi_c:属性.通用.冰冻倍率%/3"
    冰封球:
      主体: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(58,81)+ randomint(8,11)*(%papi_c:职业属性.法师.冰封球%) +{a.冰冻伤害.v})*(1+0.09*(%papi_c:职业属性.法师.霜之新星%)) * (1+0.09*(%papi_c:职业属性.法师.冰霜射线%)) *%papi_c:属性.通用.冰冻倍率%"
    强化:
      主体: "(%papi_c:属性.通用.攻击伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(12,25)+ randomint(3,5)*(%papi_c:职业属性.法师.强化%)+{a.火焰伤害.v}) * %papi_c:属性.通用.火焰倍率%"
      风暴: "(%papi_c:属性.通用.法术伤害加成%) * (1+{a.法师伤害加成.s}) * (randomint(4,9)+ randomint(2,4)*(%papi_c:职业属性.法师.强化%)+{a.火焰伤害.v})*(1+0.09*(%papi_c:职业属性.法师.烈焰风暴%)) * %papi_c:属性.通用.火焰倍率%"
      点燃: "(%papi_c:职业技能.法师.强化.风暴%) * (9.5+0.5*(%papi_c:职业属性.法师.强化%))/100.0"
    冰封装甲:
      风暴: "(%papi_c:属性.通用.法术伤害加成%)*(1+{a.法师伤害加成.s}) * (randomint(3,5)+ randomint(1,2)*(%papi_c:职业属性.法师.冰封装甲%)+{a.冰冻伤害.v})*(1+0.09*(%papi_c:职业属性.法师.冰霜射线%)) * (1+0.09*(%papi_c:职业属性.法师.霜之新星%)) * %papi_c:属性.通用.冰冻倍率%"
      霜冻: "(%papi_c:职业技能.法师.冰封装甲.风暴%) * (9.5+0.5*(%papi_c:职业属性.法师.冰封装甲%))/100.0"
  骑士:
    牺牲:
      主体伤害: "Math.max(0,%papi_c.属性.通用.攻击伤害加成%*((1+{a.增强伤害.s})*(0.45+0.07*(%papi_c:职业属性.骑士.牺牲%))*({a.基础伤害.v}+({a.力量.v}+{a.敏捷.v})/20.0+({a.最小伤害.v}+{a.最大伤害.v})/2)))"
      附加伤害: "0.02*{v_d.health}"
    白热:
      主体伤害: "Math.max(0,%papi_c.属性.通用.攻击伤害加成%*((1+{a.增强伤害.s})*(0.3+0.05*(%papi_c:职业属性.骑士.白热%))*({a.基础伤害.v}+({a.力量.v}+{a.敏捷.v})/20.0+({a.最小伤害.v}+{a.最大伤害.v})/2)))"
    复仇:
      主体伤害: "Math.max(0,%papi_c.属性.通用.攻击伤害加成%*((1+{a.增强伤害.s})*(0.35+0.06*(%papi_c:职业属性.骑士.复仇%))*({a.基础伤害.v}+({a.力量.v}+{a.敏捷.v})/20.0+({a.最小伤害.v}+{a.最大伤害.v})/2)))"
      火焰伤害: 
      毒素伤害: 
      冰冻伤害: 
      闪电伤害: 
    天罚:
      主体伤害: "Math.max(0,%papi_c.属性.通用.攻击伤害加成%*((1+{a.增强伤害.s})*(0.45+0.08*(%papi_c:职业属性.骑士.天罚%))*({a.基础伤害.v}+({a.力量.v}+{a.敏捷.v})/20.0+({a.最小伤害.v}+{a.最大伤害.v})/2)))"
    圣光弹:
      主体伤害: "(%papi_c:属性.通用.法术伤害加成%)*(1+{a.骑士伤害加成.s}) * (randomint(8,12)+ randomint(2,3)*(%papi_c:职业属性.骑士.圣光弹%)+{a.魔法伤害.v})*(1+0.09*(%papi_c:职业属性.骑士.天堂之拳%)) * (1+0.09*(%papi_c:职业属性.骑士.祝福之锤%)) * %papi_c:属性.通用.魔法倍率%"
      持续伤害: "(%papi_c:职业技能.法师.冰封装甲.风暴%) * (9.5+0.5*(%papi_c:职业属性.法师.冰封装甲%))/100.0"
    天堂之拳:
      主体伤害: "(%papi_c:属性.通用.法术伤害加成%)*(1+{a.骑士伤害加成.s}) * (randomint(20,39)+ randomint(4,9)*(%papi_c:职业属性.骑士.天堂之拳%)+{a.魔法伤害.v})*(1+0.09*(%papi_c:职业属性.骑士.圣光弹%)) * (1+0.09*(%papi_c:职业属性.骑士.祝福之锤%)) * %papi_c:属性.通用.魔法倍率%"
    祝福之锤:
      主体伤害: "(%papi_c:属性.通用.法术伤害加成%)*(1+{a.骑士伤害加成.s}) * (randomint(8,12)+ randomint(2,3)*(%papi_c:职业属性.骑士.圣光弹%)+{a.魔法伤害.v})*(1+0.09*(%papi_c:职业属性.骑士.天堂之拳%)) * (1+0.09*(%papi_c:职业属性.骑士.圣光弹%)) * %papi_c:属性.通用.魔法倍率%"
      持续伤害: "(%papi_c:职业技能.法师.冰封装甲.风暴%) * (9.5+0.5*(%papi_c:职业属性.法师.冰封装甲%))/100.0"
    突击:
      命中: 
    重击:
      命中: 
